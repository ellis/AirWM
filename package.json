{
  "name": "AirWM",
  "description": "A window manager for X using the X11 protocol",
  "version": "0.2.0",
  "contributors": [
    {
      "name": "Ellis Whitehead"
    }
  ],
  "homepage": "https://github.com/AirWM/AirWM",
  "repository": {
    "type": "git",
    "url": "https://github.com/AirWM/AirWM"
  },
  "bugs": {
    "url": "https://github.com/AirWM/AirWM/issues"
  },
  "private": "true",
  "license": "Apache-2.0",
  "dependencies": {
    "chai": "^4.1.2",
    "co": "^4.6.0",
    "ewmh": "^0.3.0",
    "immutable": "^3.8.2",
    "keysym": "0.0.6",
    "lazy-ass": "^1.6.0",
    "lodash": "^4.17.10",
    "mocha": "^5.2.0",
    "monolite": "^0.4.6",
    "redux": "^4.0.0",
    "socket.io": "^2.1.1",
    "winston": "^3.0.0",
    "x11": "^2.3.0",
    "x11-prop": "^0.4.3"
  },
  "devDependencies": {
    "@types/keysym": "0.0.1",
    "@types/lodash": "^4.14.110",
    "@types/node": "^10.3.4",
    "chai-immutable": "^1.3.0",
    "immutablediff": "^0.4.2",
    "prettier": "^1.13.5",
    "should": "*",
    "ts-node": "^6.1.1",
    "tslint": "^5.10.0",
    "tslint-config-prettier": "^1.13.0",
    "tslint-immutable": "^4.6.0",
    "typedoc": "^0.11.1",
    "typescript": "^2.9.2"
  },
  "scripts": {
    "start": "node ./build/main/index.js",
    "mtest": "mocha --compilers js:babel/register --require ./tests/test_helper.js --recursive tests",
    "mtest:watch": "npm run test -- --watch",
    "info": "npm-scripts-info",
    "build": "run-s clean && run-p build:*",
    "build:main": "tsc -p tsconfig.json",
    "build:module": "tsc -p tsconfig.module.json",
    "fix": "run-s fix:*",
    "fix:prettier": "prettier \"src/**/*.ts\" --write",
    "fix:tslint": "tslint --fix --project .",
    "test": "run-s build test:*",
    "test:lint": "tslint --project . && prettier \"src/**/*.ts\" --list-different",
    "test:unit": "nyc --silent ava",
    "test:nsp": "nsp check",
    "watch": "run-s clean build:main && run-p \"build:main -- -w\" \"test:unit -- --watch\"",
    "cov": "run-s build test:unit cov:html && opn coverage/index.html",
    "cov:html": "nyc report --reporter=html",
    "cov:send": "nyc report --reporter=lcov > coverage.lcov && codecov",
    "cov:check": "nyc report && nyc check-coverage --lines 100 --functions 100 --branches 100",
    "doc": "run-s doc:html && opn build/docs/index.html",
    "doc:html": "typedoc src/ --target ES6 --mode file --out build/docs",
    "doc:json": "typedoc src/ --target ES6 --mode file --json build/docs/typedoc.json",
    "doc:publish": "gh-pages -m \"[ci skip] Updates\" -d build/docs",
    "version": "standard-version",
    "reset": "git clean -dfx && git reset --hard && npm i",
    "clean": "trash build test",
    "all": "run-s reset test cov:check doc:html",
    "prepare-release": "run-s all version doc:publish"
  }
}
